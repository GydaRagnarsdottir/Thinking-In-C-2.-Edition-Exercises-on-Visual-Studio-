1.Theory:
The benefit of Macros:
Elimination of the overhead of the function call
The problems of Macros:
(1)don't work exactly the same as functions, might have unexpected side effects.
(2)No type checking for inputs and outputs
(3)No access control
Inlining:does Macro's work with functions
Any function in a class definition is automatically inline.
An inline function doesn't work with only function declaration.
An inline function is better to be put in header file, to avoid multiple definition error.
The essence of inlining is to trade for speed with memory space.
The inlining mechanic: to substitute function call directly with code, hence eliminate the overhead of function call.
Two situations that inlining doesn't work:
(1)The function is too complicated(including loop, too many statements, etc)
(2)The function's address is taken explicitly or inplicitly.
Macro over inline function on stringizing, string concatenation, and token pasting
